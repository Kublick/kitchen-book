generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String          @id @default(uuid())
  username  String
  email     String          @unique
  password  String?
  Recipe    Recipe[]
  sessionId String?
  sessions  Session[]
  oauth     oauth_account[]
  Favorite  Favorite[]
}

model oauth_account {
  id               Int    @id @default(autoincrement())
  provider_id      String
  provider_user_id String
  userId           String
  user             User   @relation(fields: [userId], references: [id])
}

model Category {
  id     Int      @id @default(autoincrement())
  name   String
  Recipe Recipe[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Recipe {
  id          Int        @id @default(autoincrement())
  title       String
  procedure   String
  description String
  categoryId  Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  userId      String
  cookTime    Int
  portions    Int
  prepTime    Int
  slug        String
  ingredients String
  Category    Category   @relation(fields: [categoryId], references: [id])
  User        User       @relation(fields: [userId], references: [id])
  Image       Image[]
  Favorite    Favorite[]
}

model Image {
  id       Int    @id @default(autoincrement())
  url      String
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
}

model Favorite {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  userId   String
  recipeId Int

  @@unique([userId, recipeId])
}
